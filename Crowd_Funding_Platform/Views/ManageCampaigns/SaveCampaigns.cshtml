@model Crowd_Funding_Platform.Models.Campaign
@{
    ViewData["Title"] = Model?.CampaignId > 0 ? "Edit Campaign" : "Create Campaign";

    // bool isEditMode = Model.CampaignId > 0;  // Check if it's edit mode
    Layout = "~/Views/Shared/_dashboardLayout.cshtml";
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet">

<link href="https://fonts.googleapis.com/css2?family=Nunito:wght@300;400;600&display=swap" rel="stylesheet">

<div class="container mt-5">
    <div class="card shadow-lg border-0 rounded-lg p-4">
        <h3 class="text-center text-primary mb-4">@ViewData["Title"]</h3>

        <form id="campaignForm" enctype="multipart/form-data" method="post">
            <input type="hidden" asp-for="CampaignId" />

            <div class="row">
                <!-- Left Column -->
                <div class="col-md-6">
                    <div class="form-group mb-3">
                        <label asp-for="Title" class="form-label fw-bold">Campaign Title</label>
                        <input asp-for="Title" class="form-control" placeholder="Enter campaign title"  />
                    </div>

                    <div class="form-group mb-3">
                        <label asp-for="Requirement" class="form-label fw-bold">Goal Amount ($)</label>
                        <input asp-for="Requirement" type="number" step="0.01" class="form-control" placeholder="Enter goal amount"  />
                    </div>                
                    
                    <div class="form-group mb-3">
                        <label asp-for="StartDate" class="form-label fw-bold">Start Date</label>
                        <input asp-for="StartDate" type="date" class="form-control" min="@DateTime.Today.ToString("yyyy-MM-dd")" id="StartDate" />
                    </div>
                    
                    <div class="form-group mb-3">
                        <label asp-for="EndDate" class="form-label fw-bold">End Date</label>
                        <input asp-for="EndDate" type="date" class="form-control"  min="@DateTime.Today.ToString("yyyy-MM-dd")" id="EndDate" />
                    </div>
                </div>

                <!-- Right Column -->
                <div class="col-md-6">
                    <div class="form-group mb-3">
                        <label asp-for="CategoryId" class="form-label fw-bold">Category</label>
                        <select asp-for="CategoryId" class="form-control" asp-items="ViewBag.Categories">
                            <option value="">Select Category</option>
                        </select>
@*                         <span class="text-danger" asp-validation-for="CategoryId"></span>*@  
                    </div>
                   
                    <!-- Main Thumbnail Upload -->
                    <div class="form-group mb-3">
                        <label for="MediaFile" class="form-label fw-bold">Main Thumbnail Image</label>
                        <input type="file" name="ImageFile" class="form-control" accept="image/*" onchange="previewImage(event)" />
                        <img id="existingImage" src="@Model.MediaUrl" class="mt-2" style="max-width: 200px; display: @(string.IsNullOrEmpty(Model.MediaUrl) ? "none" : "block")" />
                    </div>

                    <!-- Gallery Upload -->
                    <div class="form-group mb-3">
                        <label for="GalleryImages" class="form-label fw-bold">Gallery Images</label>
                        <input type="file" name="GalleryImages" multiple class="form-control" onchange="previewGallery(event)" />
                        <div id="galleryPreview" class="d-flex flex-wrap gap-2 mt-2"></div>
                    </div>


                  @*  <div class="form-group">
                        <label for="Image">Campaign Image</label>
                        <input type="file" id="MediaFile" name="ImageFile" class="form-control" accept="image/*" onchange="previewImage(event)" />

                        @if (!string.IsNullOrEmpty(Model?.MediaUrl))
                        {
                            <img id="existingImage" src="@Model.MediaUrl" alt="Campaign Image" class="mt-2" style="max-width: 200px; display: block;" />
                        }
                        else
                        {
                            <img id="existingImage" src="@Model.MediaUrl" alt="Preview Image" class="mt-2" style="max-width: 200px; display: none;" />
                        }
                    </div>  *@

                    <div class="form-group mb-3">
                        <label asp-for="Description" class="form-label fw-bold">Description</label>
                        <textarea asp-for="Description" class="form-control" rows="4" placeholder="Describe your campaign"></textarea>
                    </div>
                </div>
            </div>

            <div class="text-center mt-4">
                <button type="submit" class="btn btn-primary btn-lg px-4">
                    <i class="fas fa-save me-2"></i> @((Model?.CampaignId ?? 0) > 0 ? "Edit Campaign" : "Create Campaign")
                </button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}

    <!-- ✅ Toastr and jQuery Validation Scripts -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
    <!-- Toastr CSS -->

    <!-- Toastr JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script src="~/js/SaveCampaignForm.js"></script>


     <script>
        function previewImage(event) {
            const input = event.target;
            const preview = document.getElementById('existingImage');

            if (input.files && input.files[0]) {
                const reader = new FileReader();
                reader.onload = e => {
                    preview.src = e.target.result;
                    preview.style.display = 'block';
                };
                reader.readAsDataURL(input.files[0]);
            }
        }

        function previewGallery(event) {
            const previewDiv = document.getElementById("galleryPreview");
            previewDiv.innerHTML = ""; // Clear old preview
            const files = event.target.files;

            for (const file of files) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    const img = document.createElement("img");
                    img.src = e.target.result;
                    img.className = "rounded";
                    img.style.maxWidth = "100px";
                    img.style.maxHeight = "100px";
                    img.style.marginRight = "10px";
                    previewDiv.appendChild(img);
                };
                reader.readAsDataURL(file);
            }
        }
    </script>
}
    @* <script>
        function previewImage(event) {
            var input = event.target;
            var preview = document.getElementById('existingImage');

            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    preview.src = e.target.result;
                    preview.style.display = 'block';
                };

                reader.readAsDataURL(input.files[0]);
            }
        }
    </script> *@


