@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<Crowd_Funding_Platform.Models.Campaign>

@{
    ViewData["Title"] = "CampaignsList";
    Layout = "~/Views/Shared/_dashboardLayout.cshtml";
}

<style>
    .filter-card {
        border-radius: 12px;
        box-shadow: 0 2px 12px rgba(0, 0, 0, 0.05);
        padding: 20px;
        margin-bottom: 25px;
    }

    .form-control, .form-select {
        height: 42px;
        font-size: 0.95rem;
    }

    .search-filter-group .col-md-2,
    .search-filter-group .col-md-3 {
        padding-right: 10px;
        padding-left: 10px;
    }

    .reset-btn {
        height: 42px;
        width: 100%;
    }

    .table thead th {
        background-color: #f8f9fa;
        font-weight: bold;
        vertical-align: middle;
        text-align: center;
    }

    .table tbody td {
        vertical-align: middle;
        text-align: center;
    }

    .action-btns .btn {
        margin: 2px;
        padding: 6px 10px;
    }

    .action-btns i {
        font-size: 14px;
    }

    .header-title {
        font-size: 24px;
        font-weight: 600;
        color: #007bff;
    }

    .create-btn {
        font-size: 14px;
        padding: 10px 15px;
    }

    .badge {
        font-size: 0.85rem;
        padding: 6px 12px;
        border-radius: 12px;
        color: white;
    }

    .badge-pink {
        background-color: #f06292;
    }

    .badge-yellow {
        background-color: #efd91d;
        
    }

    .badge-green {
        background-color: #49cb50;
    }

    .badge-secondary {
        background-color: #6c757d;
    }

    .action-btns .btn {
        margin: 0 3px;
    }

</style>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<a asp-action="ExportCampaignsToExcel" asp-route-searchTerm="@ViewBag.SearchTerm" asp-route-categoryFilter="@ViewBag.SelectedCategoryId" asp-route-startDate="@ViewBag.StartDate" asp-route-endDate="@ViewBag.EndDate" class="btn btn-success">
    Export to Excel
</a>

<div class="container mt-4">
    @if (Model != null && Model.Any())
    {
        <div id="campaignContainer">

            <!-- ✅ Filter Card with Title + Create Button -->
            <div class="card mb-4 p-4 filter-card">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h2 class="text-primary m-0">📋 Campaigns List</h2>
                    <a asp-action="SaveCampaigns" class="btn btn-success create-btn">
                        <i class="fas fa-plus-circle"></i> Create New
                    </a>
                </div>

                <div class="row search-filter-group align-items-end g-2">
                    <!-- Search -->
                    <div class="col-md-3">
                        <input type="text" name="searchTerm" class="form-control" id="searchTerm" placeholder="🔍 Search by title" />
                    </div>

                    <!-- Category -->
                    <div class="col-md-3">
                        <select id="categoryInput" name="categoryFilter" class="form-select">
                            <option value="">🎯 All Categories</option>
                            @foreach (var cat in ViewBag.Categories as List<SelectListItem>)
                            {
                                <option value="@cat.Value" selected="@(ViewBag.SelectedCategory == cat.Value ? "selected" : null)">
                                    @cat.Text
                                </option>
                            }
                        </select>
                    </div>

                    <!-- Start Date -->
                    <div class="col-md-2">
                        <input type="date" name="startDate" class="form-control" id="startDate" placeholder="From" />
                    </div>

                    <!-- End Date -->
                    <div class="col-md-2">
                        <input type="date" name="endDate" class="form-control" id="endDate" placeholder="To" />
                    </div>

                    <!-- Reset Button -->
                    <div class="col-md-2">
                        <button type="button" class="btn btn-outline-danger reset-btn" onclick="resetFilters()">
                            <i class="fas fa-redo-alt"></i> Reset
                        </button>
                    </div>
                </div>
            </div>


            <!-- 📋 Table Section -->
            <div class="table-responsive rounded shadow-sm bg-white p-3" id="campaignTable">
                <table class="table table-hover">
                    <thead class="thead-dark">
                        <tr>
                            <th>Title</th>
                            <th>Requirement Amount</th>
                            <th>Raised Amount</th>
                            <th>Start Date</th>
                            <th>End Date</th>
                            <th>Total Contributors</th>
                            <th>Status</th>
                            <th class="text-center">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.Title)</td>
@*                                 <td>@Html.DisplayFor(modelItem => item.Requirement)</td>
 *@                                <td class="text-success fw-bold">₹@item.Requirement</td>
                                <td class="text-success fw-bold">₹@item.RaisedAmount</td>
@*                                 <td>@Html.DisplayFor(modelItem => item.RaisedAmount)</td>
 *@                                <td>@Html.DisplayFor(modelItem => item.StartDate)</td>
                                <td>@Html.DisplayFor(modelItem => item.EndDate)</td>
                                <td>@Html.DisplayFor(modelItem => item.TotalContributors)</td>
                                <td>
                                    @{
                                        string badgeClass = item.Status switch
                                        {
                                            "Upcoming" => "badge badge-pink",
                                            "Ongoing" => "badge badge-yellow",
                                            "Completed" => "badge badge-green",
                                            _ => "badge badge-secondary"
                                        };
                                    }
                                    <span class="@badgeClass">@item.Status</span>
                                </td>
                                <td class="text-center action-btns">
                                    @if (item.Status == "Upcoming")
                                    {
                                        <a href="@Url.Action("SaveCampaigns", new { id = item.CampaignId })"
                                           class="btn btn-primary btn-sm"
                                           title="Edit this campaign. You can only edit campaigns that have not started yet."
                                           data-bs-toggle="tooltip" data-bs-placement="top">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                    }
                                    else
                                    {
                                        <button class="btn btn-outline-secondary btn-sm"
                                                title="Edit disabled. Campaigns that are Ongoing or Completed cannot be edited."
                                                data-bs-toggle="tooltip" data-bs-placement="top" disabled>
                                            <i class="fas fa-edit"></i>
                                        </button>
                                    }
                                    <a asp-action="Details" asp-route-id="@item.CampaignId"
                                       class="btn btn-outline-info btn-sm"
                                       title="View detailed information about this campaign"
                                       data-bs-toggle="tooltip" data-bs-placement="top">
                                        <i class="fas fa-eye"></i>
                                    </a>

                                   @*  <a asp-action="Delete" asp-route-id="@item.CampaignId"
                                       class="btn btn-outline-danger btn-sm"
                                       onclick="return confirm('Are you sure you want to delete this campaign?');"
                                       title="Delete this campaign"
                                       data-bs-toggle="tooltip" data-bs-placement="top">
                                        <i class="fas fa-trash-alt"></i>
                                    </a> *@

                                    <a href="javascript:void(0);" class="btn btn-sm btn-danger text-white" onclick="confirmCampaignDelete(@item.CampaignId)">Delete</a>



                                    <a asp-action="ViewContributors" asp-route-campaignId="@item.CampaignId"
                                       class="btn btn-outline-warning btn-sm"
                                       title="View the list of contributors for this campaign"
                                       data-bs-toggle="tooltip" data-bs-placement="top">
                                        <i class="fas fa-users"></i>
                                    </a>
                                </td>

                            </tr>
                        }
                    </tbody>
                </table>

                <!-- 📄 Pagination -->
                <div class="d-flex justify-content-center mt-4">
                    @Html.PagedListPager(Model, page => Url.Action("CampaignsList", new
                        {
                            page,
                            searchTerm = ViewBag.SearchTerm,
                            categoryFilter = ViewBag.SelectedCategory,
                            startDate = ViewBag.StartDate,
                            endDate = ViewBag.EndDate
                        }), new PagedListRenderOptions
                       {
                           DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                           DisplayLinkToLastPage = PagedListDisplayMode.Always,
                           DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                           DisplayLinkToNextPage = PagedListDisplayMode.Always,
                           DisplayLinkToIndividualPages = true,
                           DisplayPageCountAndCurrentLocation = false,
                           MaximumPageNumbersToDisplay = 5,
                           LiElementClasses = new[] { "page-item" },
                           PageClasses = new[] { "page-link" }
                       })
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="alert alert-info shadow-sm">
            No contributors found for this campaign.
        </div>
    }
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        function resetFilters() {
            document.getElementById("searchTerm").value = "";
            document.getElementById("categoryInput").selectedIndex = 0;
            document.getElementById("startDate").value = "";
            document.getElementById("endDate").value = "";

            // Reload the page with no filters (like full data load)
            window.location.href = '@Url.Action("CampaignsList", "ManageCampaigns")';
            // ^ Change "Dashboard" to your actual controller name if different
        }
    
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        });
   
    
        $(document).ready(function () {

            function debounce(func, delay) {
                let timer;
                return function () {
                    const context = this;
                    const args = arguments;
                    clearTimeout(timer);
                    timer = setTimeout(() => func.apply(context, args), delay);
                };
            }

            function loadCampaigns(url) {
                $.get(url, function (data) {
                    const newContent = $(data).find("#campaignTable").html();
                    $("#campaignTable").html(newContent);
                });
            }

            function fetchFilteredResults() {
                const search = $("#searchTerm").val();
                const category = $("#categoryInput").val();
                const start = $("#startDate").val();
                const end = $("#endDate").val();

                const url = `/ManageCampaigns/CampaignsList?searchTerm=${encodeURIComponent(search)}&categoryFilter=${encodeURIComponent(category)}&startDate=${start}&endDate=${end}`;
                loadCampaigns(url);
            }

            $("#searchTerm").on("input", debounce(fetchFilteredResults, 500));
            $("#categoryInput, #startDate, #endDate").on("change", fetchFilteredResults);

            $(document).on("click", ".pagination a", function (e) {
                e.preventDefault();
                const url = $(this).attr("href");
                loadCampaigns(url);
            });

        });
    </script>
    <script>
        function confirmCampaignDelete(CampaignId) {
            Swal.fire({
                title: 'Are you sure?',
                text: "This campaign will be permanently deleted!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#6c757d',
                confirmButtonText: 'Yes, delete it!',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    sendCampaignDeleteRequest(CampaignId);
                }
            });
        }

        function sendCampaignDeleteRequest(CampaignId) {
            fetch(`/ManageCampaigns/DeleteConfirmed/${CampaignId}`, {
                method: "POST"
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire(
                            'Deleted!',
                            'Campaign has been deleted.',
                            'success'
                        );
                        setTimeout(() => location.reload(), 1500);
                    } else {
                        Swal.fire(
                            'Failed!',
                            'Failed to delete campaign.',
                            'error'
                        );
                    }
                })
                .catch(error => {
                    Swal.fire(
                        'Error!',
                        'An error occurred while deleting.',
                        'error'
                    );
                });
        }
    </script>

}


@* 
<style>
    .badge-pink {
        background-color: #f06292;
        color: white;
    }

    .badge-yellow {
        background-color: #fff176;
        color: #333;
    }

    .badge-green {
        background-color: #66bb6a;
        color: white;
    }
</style>

<div class="container mt-4">
     @if (Model != null && Model.Any())
    {  
    <div id="campaignContainer">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h2 class="text-primary">Campaigns List</h2>
            <a asp-action="SaveCampaigns" class="btn btn-success"><i class="fas fa-plus-circle"></i> Create New</a>
        </div>
       
        <div class="col-md-3">
            <input type="text" name="searchTerm" class="form-control" id="searchTerm" placeholder="Search by title..." />
        </div> 
        <div class="col-md-6">
            <select id="categoryInput" name="categoryFilter" class="form-select rounded-pill shadow-sm">
                <option value="">🎯 All Categories</option>
                    @foreach (var cat in ViewBag.Categories as List<SelectListItem>)
                    {
                        var selected = Context.Request.Query["category"] == cat ? "selected" : "";
                        <option value="@cat.Value" selected="@(ViewBag.SelectedCategory == cat.Value ? "selected" : null)">
                            @cat.Text
                        </option>
                    }
            </select>
        </div>
       
        <div class="col-md-2">
        <input type="date" name="startDate" class="form-control" id="startDate" placeholder="From Date" />
        </div>

        <div class="col-md-2">
        <input type="date" name="endDate" class="form-control" id="endDate" placeholder="To Date" />
        </div>

        <div class="table-responsive rounded shadow-sm bg-white p-3" id="campaignTable">
            <table class="table table-hover">
                <thead class="thead-dark">
                    <tr>
                        <th>Title</th>
                        <th>Requirement Amount</th>
                        <th>Raised Amount</th>
                        <th>Start Date</th>
                        <th>End Date</th>
                        <th>Total Contributors</th>
                        <th>Status</th>
                        <th class="text-center">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.Title)</td>
                            <td>@Html.DisplayFor(modelItem => item.Requirement)</td>
                            <td>@Html.DisplayFor(modelItem => item.RaisedAmount)</td>
                            <td>@Html.DisplayFor(modelItem => item.StartDate)</td>
                            <td>@Html.DisplayFor(modelItem => item.EndDate)</td>
                            <td>@Html.DisplayFor(modelItem => item.TotalContributors)</td>                     
                            

                            <td>
                                @{
                                    string badgeClass = item.Status switch
                                    {
                                        "Upcoming" => "badge badge-pink",
                                        "Ongoing" => "badge badge-yellow",
                                        "Completed" => "badge badge-green",
                                        _ => "badge badge-secondary"
                                    };
                                }
                                <span class="@badgeClass">@item.Status</span>
                            </td>                          
                            <td class="text-center">
                               
                                    @if (item.Status == "Upcoming")
                                    {
                                    <a href="@Url.Action("SaveCampaigns", new { id = item.CampaignId })" class="btn btn-primary btn-sm">Edit</a>
                                    }
                                    else
                                    {
                                    <button class="btn btn-secondary btn-sm" disabled>Edit</button>
                                    }
                           
                                <a asp-action="Details" asp-route-id="@item.CampaignId" class="btn btn-info btn-sm">
                                    <i class="fas fa-eye"></i> Details
                                </a>
                                <a asp-action="Delete" asp-route-id="@item.CampaignId" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure you want to delete this campaign?');">
                                    <i class="fas fa-trash-alt"></i> Delete
                                </a>
                                <a asp-action="ViewContributors" asp-route-campaignId="@item.CampaignId" class="btn btn-warning btn-sm">
                                    <i class="fas fa-users"></i> View Contributors
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <div class="d-flex justify-content-center mt-4">
                    @Html.PagedListPager(Model, page => Url.Action("CampaignsList", new
                {
                    page,
                    searchTerm = ViewBag.SearchTerm,
                    categoryFilter = ViewBag.SelectedCategory,
                    startDate=ViewBag.StartDate,
                    endDate = ViewBag.EndDate
                }), new PagedListRenderOptions
                   {
                       DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                       DisplayLinkToLastPage = PagedListDisplayMode.Always,
                       DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                       DisplayLinkToNextPage = PagedListDisplayMode.Always,
                       DisplayLinkToIndividualPages = true,
                       DisplayPageCountAndCurrentLocation = false,
                       MaximumPageNumbersToDisplay = 5,
                       LiElementClasses = new[] { "page-item" },
                       PageClasses = new[] { "page-link" }
                   })
            </div>

        </div>

    </div>

    }
    else
    {
        <div class="alert alert-info shadow-sm">
            No contributors found for this campaign.
        </div>
    }
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {

            function debounce(func, delay) {
                let timer;
                return function () {
                    const context = this;
                    const args = arguments;
                    clearTimeout(timer);
                    timer = setTimeout(() => func.apply(context, args), delay);
                };
            }

            function loadCampaigns(url) {
                $.get(url, function (data) {
                    const newContent = $(data).find("#campaignTable").html();
                    $("#campaignTable").html(newContent);
                });
            }

            function fetchFilteredResults() {
                const search = $("#searchTerm").val();
                const category = $("#categoryInput").val();
                const start = $("#startDate").val();
                const end = $("#endDate").val();

                const url = `/ManageCampaigns/CampaignsList?searchTerm=${encodeURIComponent(search)}&categoryFilter=${encodeURIComponent(category)}&startDate=${start}&endDate=${end}`;
                loadCampaigns(url);
            }

            $("#searchTerm").on("input", debounce(fetchFilteredResults, 500));
            $("#categoryInput, #startDate, #endDate").on("change", fetchFilteredResults);

            $(document).on("click", ".pagination a", function (e) {
                e.preventDefault();
                const url = $(this).attr("href");
                loadCampaigns(url);
            });
        });
    </script>
} *@

   
